apiVersion: v1
kind: Namespace
metadata:
  name: sandbox
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-app
  namespace: sandbox
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: example-app
  namespace: sandbox
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-app
  namespace: sandbox
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: example-app
subjects:
- kind: ServiceAccount
  name: example-app
  namespace: sandbox
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-csi-app
  namespace: sandbox
  labels:
    app: my-csi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-csi-app
  template:
    metadata:
      labels:
        app: my-csi-app
    spec:
      serviceAccountName: example-app
      containers:
        - name: example-app
          image: amazon/aws-cli
          imagePullPolicy: IfNotPresent
          command: [ "sleep", "1000000" ]
          volumeMounts:
          - mountPath: "/root/.aws"
            name: spiffe
      volumes:
        - name: spiffe
          csi:
            driver: spiffe.csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              aws.spiffe.csi.cert-manager.io/trust-profile: ""
              aws.spiffe.csi.cert-manager.io/trust-anchor: ""
              aws.spiffe.csi.cert-manager.io/role: ""
              aws.spiffe.csi.cert-manager.io/enable: "true"
