apiVersion: v1
kind: Namespace
metadata:
  name: app-a
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-app-a
  namespace: app-a
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: example-app-a
  namespace: app-a
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-app-a
  namespace: app-a
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: example-app-a
subjects:
- kind: ServiceAccount
  name: example-app-a
  namespace: app-a
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-csi-app
  namespace: app-a
  labels:
    app: my-csi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-csi-app
  template:
    metadata:
      labels:
        app: my-csi-app
    spec:
      serviceAccountName: example-app-a
      containers:
        - name: example-app-a
          image: ghcr.io/joshvanl/spiffe-example-app:dev
          imagePullPolicy: IfNotPresent
          command: [ "sleep", "1000000" ]
          volumeMounts:
          - mountPath: "/.aws"
            name: spiffe
      volumes:
        - name: spiffe
          csi:
            driver: spiffe.csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              aws.spiffe.csi.cert-manager.io/trust-profile: ""
              aws.spiffe.csi.cert-manager.io/trust-anchor: ""
              aws.spiffe.csi.cert-manager.io/role: ""
              aws.spiffe.csi.cert-manager.io/enable: "true"
---
apiVersion: v1
kind: Namespace
metadata:
  name: app-b
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-app-b
  namespace: app-b
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: example-app-b
  namespace: app-b
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-app-b
  namespace: app-b
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: example-app-b
subjects:
- kind: ServiceAccount
  name: example-app-b
  namespace: app-b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-csi-app
  namespace: app-b
  labels:
    app: my-csi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-csi-app
  template:
    metadata:
      labels:
        app: my-csi-app
    spec:
      serviceAccountName: example-app-b
      containers:
        - name: example-app-b
          image: ghcr.io/joshvanl/spiffe-example-app:dev
          imagePullPolicy: IfNotPresent
          command: [ "sleep", "1000000" ]
          volumeMounts:
          - mountPath: "/.aws"
            name: spiffe
      volumes:
        - name: spiffe
          csi:
            driver: spiffe.csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              aws.spiffe.csi.cert-manager.io/trust-profile: ""
              aws.spiffe.csi.cert-manager.io/trust-anchor: ""
              aws.spiffe.csi.cert-manager.io/role: ""
              aws.spiffe.csi.cert-manager.io/enable: "true"
